# Traefik 2.0 Recipe
z# /share/swarm/configs/traefik/traefik.yml
version: "3.4"

secrets:
  cloudflare_api_email:
    file: "/share/swarm/secrets/cloudflare_api_email.secret"
  cloudflare_api_key:
    file: "/share/swarm/secrets/cloudflare_api_key.secret"
  
services:
  app:
    image: traefik:latest
    secrets:
      - cloudflare_api_email
      - cloudflare_api_key
    environment:
      - CLOUDFLARE_API_EMAIL_FILE=/run/secrets/cloudflare_api_email
      - CLOUDFLARE_API_KEY_FILE=/run/secrets/cloudflare_api_key
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8090
        protocol: tcp
        mode: host
    volumes:
       - /etc/timezone:/etc/timezone:ro
       - /var/run/docker.sock:/var/run/docker.sock:ro
       - /share/swarm/appdata/traefik:/etc/traefik
    networks:
      - traefik_public
    command: --configFile=/etc/traefik/traefik-static.yaml
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.entrypoints=https"
        - "traefik.http.routers.traefik.rule=Host(`traefik.MYDOMAIN.TLD`)"
        - "traefik.http.routers.traefik.tls.certresolver=MYCERTRESOLVER"
        - "traefik.http.routers.traefik.middlewares=forward-auth@file"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"

  whoami:
    image: containous/whoami
    networks:
      - traefik_public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.entrypoints=https"
        - "traefik.http.routers.whoami.rule=Host(`whoami.MYDOMAIN.TLD`)"
        - "traefik.http.routers.whoami.tls.certresolver=MYCERTRESOLVER"
        - "traefik.http.routers.whoami.middlewares=forward-auth@file"
        - "traefik.http.services.whoami.loadbalancer.server.port=80"

  auth:
    image: dniel/forwardauth:latest
    networks:
      - traefik_public
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - /share/swarm/configs/traefik/application.yaml:/config/application.yaml
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.auth.entrypoints=https"
        - "traefik.http.routers.auth.rule=Host(`auth.MYDOMAIN.TLD`)"
        - "traefik.http.routers.auth.tls.certresolver=MYCERTRESOLVER"
        - "traefik.http.routers.auth.middlewares=forward-auth@file"
        - "traefik.http.services.auth.loadbalancer.server.port=8080"

  www:
    image: dniel/blogr-www
    networks:
      - traefik_public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.www.entrypoints=https"
        - "traefik.http.routers.www.rule=Host(`www.MYDOMAIN.TLD`)"
        - "traefik.http.routers.www.tls.certresolver=MYCERTRESOLVER"
        - "traefik.http.routers.www.middlewares=forward-auth@file"
        - "traefik.http.services.www.loadbalancer.server.port=80"

networks:
  traefik_public:
    external: true
