# Plex Recipe
# ${configs_folder}/plex/plex.yml
version: "3.4"

services:
  plex:
    image: linuxserver/plex:latest
    environment:
      - VERSION=docker
      - PUID=${var_usr}
      - PGID=${var_grp}
    ports:
      - "${port_plex_web}:32400"
      - "${port_plex_remote}:32401"
      - "${port_plex_dlna}:32469"
      - "${port_plex_tools1}:33400"
      - "${port_plex_tools2}:33443"
      - "${port_plex_companion}:3005"
      - "${port_plex_roku}:8324"
      - "${port_plex_avahi}:5353/udp"
      - "${port_plex_dlna_svr}:1900/udp"
      - "${port_plex_web}:32400/udp"
      - "${port_plex_dlna}:32469/udp"
      - "${port_plex_gdm0}:32410/udp"
      - "${port_plex_gdm2}:32412/udp"
      - "${port_plex_gdm3}:32413/udp"
      - "${port_plex_gdm4}:32414/udp"
    networks:
      - traefik_public        
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - ${appdata_folder}/plex:/config
      - ${media_videos_folder}:/data
      - ${runtime_folder}/plex/transcode:/transcode
    deploy:
      labels:     
        - "traefik.enable=true"
        # First, we need a router for Plex that uses SSL.
        - "traefik.http.routers.plex.entrypoints=https"
        - "traefik.http.routers.plex.rule=Host(`plex.${var_domain}`)"
        - "traefik.http.routers.plex.tls.certresolver=${var_certresolver}"
        # We do NOT want forward-auth enabled for Plex, as it has it's own 
        # authorization/authentication.
        #- "traefik.http.routers.plex.middlewares=forward-auth@file"
        - "traefik.http.services.plex.loadbalancer.server.port=${port_plex_web}" 
        # Next, we need a router (which has authentication) for webtools plugin
        # own authorization/authentication.
        - "traefik.http.routers.webtools.entrypoints=https"
        - "traefik.http.routers.webtools.rule=Host(`webtools.${var_domain}`)"
        - "traefik.http.routers.webtools.tls.certresolver=${var_certresolver}"
        - "traefik.http.routers.webtools.middlewares=forward-auth@file"
        - "traefik.http.services.webtools.loadbalancer.server.port=${port_webtools}" 

  synclounge:
    image: starbix/synclounge:latest
    ports:
      - ${port_synclounge}:8088
      - ${port_synclounge_svr}:8089
    environment:
      - DOMAIN=lounge.${var_domain}
    deploy:
      labels:
        - "traefik.enable=true"
        # We want to expose synclounge via http, so we need to specify an 
        # http endpoint for it and be sure not to redirect.        
        - "traefik.http.routers.synclounge.entrypoints=http"
        - "traefik.http.routers.synclounge.rule=Host(`synclounge.${var_domain}`)"
        - "traefik.http.services.synclounge.loadbalancer.server.port=${port_synclounge}"
        # We want to expose the synclounge server via http, so we need
        # to specify an http endpoint for it and be sure not to redirect.    
        - "traefik.http.routers.slserver.entrypoints=http"
        - "traefik.http.routers.slserver.rule=Host(`slserver.${var_domain}`)"
        - "traefik.http.services.slserver.loadbalancer.server.port=${port_synclounge_svr}"

  tautulli:
    image: linuxserver/tautulli:latest
    env_file: ${configs_folder}/plex/tautulli.env
    ports:
      - 8181:8181
    volumes:
      - ${media_videos_folder}:/data
      - ${appdata_folder}/plex/tautulli:/config
    networks:
      - traefik_public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.tautulli.entrypoints=https"
        - "traefik.http.routers.tautulli.rule=Host(`tautulli.${var_domain}`)"
        - "traefik.http.routers.tautulli.tls.certresolver=${var_certresolver}"
        - "traefik.http.routers.tautulli.middlewares=forward-auth@file"
        - "traefik.http.services.tautulli.loadbalancer.server.port=${port_tautulli}"

  nowshowing:
    image: ninthwalker/nowshowing:v2
    environment:
      - PUID=${var_usr}
      - PGID=${var_grp}
      - TZ="${var_tz_region}/${var_tz_city}"
    volumes:
      - ${appdata_folder}/plex/nowshowing:/config:rw
    networks:
      - traefik_public
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nowshowing.entrypoints=https"
        - "traefik.http.routers.nowshowing.rule=Host(`nowshowing.${var_domain}`)"
        - "traefik.http.routers.nowshowing.tls.certresolver=${var_certresolver}"
        - "traefik.http.routers.nowshowing.middlewares=forward-auth@file"
        - "traefik.http.services.nowshowing.loadbalancer.server.port=${port_nowshowing}"

networks:
  traefik_public:
    external: true
  internal:
    driver: overlay
    ipam:
      config:
        - subnet: ${ip_plex}/24
